package com.yourdomain.telegramnotifier; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–∞–∫–µ—Ç!

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitRunnable;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.logging.Level;

public class TelegramNotifier extends JavaPlugin implements Listener {

    private String botToken;
    private String chatId;
    private boolean enabledFeatures_Chat = true;
    private boolean enabledFeatures_Join = true;
    private boolean enabledFeatures_Quit = true;
    private boolean enabledFeatures_ServerStatus = true;

    @Override
    public void onEnable() {
        // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        saveDefaultConfig(); // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç config.yml –∏–∑ jar, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        loadConfigValues();

        if (botToken == null || botToken.isEmpty() || botToken.equals("YOUR_BOT_TOKEN") ||
            chatId == null || chatId.isEmpty() || chatId.equals("YOUR_CHAT_ID")) {
            getLogger().severe("!!! Telegram Bot Token –∏–ª–∏ Chat ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ config.yml!");
            getLogger().severe("!!! –ü–ª–∞–≥–∏–Ω TelegramNotifier –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è.");
            // –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–ª–∞–≥–∏–Ω, –µ—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–≤–µ—Ä–Ω–∞
            // Bukkit.getPluginManager().disablePlugin(this);
            // return;
        } else {
             getLogger().info("TelegramNotifier –≤–∫–ª—é—á–µ–Ω!");
        }

        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏–π
        getServer().getPluginManager().registerEvents(this, this);

        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
        if (enabledFeatures_ServerStatus) {
            sendMessageToTelegramAsync("‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!");
        }
    }

    @Override
    public void onDisable() {
         // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–µ—Ä–∞ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
        // –î–µ–ª–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, —Ç.–∫. —Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è
        if (enabledFeatures_ServerStatus && botToken != null && !botToken.isEmpty() && chatId != null && !chatId.isEmpty()) {
             sendMessageToTelegramSync("üõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!");
        }
         getLogger().info("TelegramNotifier –≤—ã–∫–ª—é—á–µ–Ω.");
    }

    private void loadConfigValues() {
        FileConfiguration config = getConfig();
        botToken = config.getString("telegram.bot-token");
        chatId = config.getString("telegram.chat-id");
        enabledFeatures_Chat = config.getBoolean("enabled-features.chat", true);
        enabledFeatures_Join = config.getBoolean("enabled-features.join", true);
        enabledFeatures_Quit = config.getBoolean("enabled-features.quit", true);
        enabledFeatures_ServerStatus = config.getBoolean("enabled-features.server-status", true);
    }

    // --- –°–ª—É—à–∞—Ç–µ–ª–∏ –°–æ–±—ã—Ç–∏–π ---

    @EventHandler
    public void onPlayerChat(AsyncPlayerChatEvent event) {
        if (!enabledFeatures_Chat) return;

        Player player = event.getPlayer();
        String message = event.getMessage();
        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º HTML —Ç–µ–≥–∏ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ Telegram
        String formattedMessage = "[üí¨] " + escapeHtml(player.getName()) + ": " + escapeHtml(message);
        sendMessageToTelegramAsync(formattedMessage);
    }

    @EventHandler
    public void onPlayerJoin(PlayerJoinEvent event) {
        if (!enabledFeatures_Join) return;

        Player player = event.getPlayer();
        String formattedMessage = "[‚ûï] –ò–≥—Ä–æ–∫ " + escapeHtml(player.getName()) + " –≤–æ—à–µ–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä.";
        sendMessageToTelegramAsync(formattedMessage);
    }

    @EventHandler
    public void onPlayerQuit(PlayerQuitEvent event) {
        if (!enabledFeatures_Quit) return;

        Player player = event.getPlayer();
        String formattedMessage = "[‚ûñ] –ò–≥—Ä–æ–∫ " + escapeHtml(player.getName()) + " –≤—ã—à–µ–ª —Å —Å–µ—Ä–≤–µ—Ä–∞.";
        sendMessageToTelegramAsync(formattedMessage);
    }

    // --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram ---

    private void sendMessageToTelegramAsync(String message) {
        if (botToken == null || botToken.isEmpty() || chatId == null || chatId.isEmpty()) {
            // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
             getLogger().warning("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram, –Ω–æ —Ç–æ–∫–µ–Ω/chat_id –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.");
            return;
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –∑–∞–¥–∞—á—É, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
        new BukkitRunnable() {
            @Override
            public void run() {
                sendMessageToTelegramSync(message);
            }
        }.runTaskAsynchronously(this);
    }

    // –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ async –∑–∞–¥–∞—á–∏ –∏–ª–∏ onDisable)
    private void sendMessageToTelegramSync(String message) {
         if (botToken == null || botToken.isEmpty() || chatId == null || chatId.isEmpty()) {
             return; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
         }
        HttpURLConnection connection = null;
        try {
            // URL Encode —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
            String encodedMessage = URLEncoder.encode(message, StandardCharsets.UTF_8.toString());
            String urlString = "https://api.telegram.org/bot" + botToken + "/sendMessage";
            String params = "chat_id=" + chatId + "&text=" + encodedMessage + "&parse_mode=HTML"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

            URL url = new URL(urlString);
            connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            connection.setRequestProperty("Content-Length", Integer.toString(params.getBytes(StandardCharsets.UTF_8).length));
            connection.setUseCaches(false);
            connection.setDoOutput(true); // –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            try (OutputStream os = connection.getOutputStream()) {
                byte[] input = params.getBytes(StandardCharsets.UTF_8);
                os.write(input, 0, input.length);
            }

            // –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
            int responseCode = connection.getResponseCode();
            if (responseCode != HttpURLConnection.HTTP_OK) {
                // –ß–∏—Ç–∞–µ–º —Ç–µ–ª–æ –æ—à–∏–±–∫–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                StringBuilder response = new StringBuilder();
                 try (BufferedReader br = new BufferedReader(new InputStreamReader(connection.getErrorStream(), StandardCharsets.UTF_8))) {
                     String responseLine;
                     while ((responseLine = br.readLine()) != null) {
                         response.append(responseLine.trim());
                     }
                     getLogger().warning("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram! –ö–æ–¥: " + responseCode + ", –û—Ç–≤–µ—Ç: " + response.toString());
                 } catch (Exception e) {
                    getLogger().warning("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram! –ö–æ–¥: " + responseCode + " (–Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–ª–æ –æ—à–∏–±–∫–∏)");
                 }
            } else {
                // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
                // getLogger().info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.");
            }

        } catch (Exception e) {
            getLogger().log(Level.SEVERE, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram:", e);
        } finally {
            if (connection != null) {
                connection.disconnect();
            }
        }
    }

     // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML
     private String escapeHtml(String text) {
         if (text == null) return "";
         return text.replace("&", "&")
                    .replace("<", "<")
                    .replace(">", ">")
                    .replace("\"", """)
                    .replace("'", "'");
     }
}
